---
title: "p8105_hw1_lec2197"
author: "Laura Cosgrove"
date: "9/15/2018"
output: github_document
---

Before starting anything, I'm going to load packages `here` and `tidyverse`. I'm loading `here` in case I need to work with any data: it helps find source files without being super picky about where they are. Jenny Bryan recommended it in one of the readings. I'm loading `tidyverse` because I suspect I may need to use it to create plots.

```{r adding libraries}
library(here)
library(tidyverse)
```

## Problem 1

My goal is to create a data frame comprised of some specified vectors.

First, I created the following vectors:

* A random sample of size 10 from a uniform[0, 5] distribution
* A logical vector indicating whether elements of the sample are greater than 2
* A (length-10) character vector
* A (length-10) factor vector

```{r create vectors, results="hide"}
set.seed(1)
rand_sample <- runif(10, min = 0, max = 5)
log_vector <- rand_sample > 2
char_vector <- character(length = 10)
fact_vector <- factor(log_vector)
```

I had to create the vectors first before binding them in a dataframe, because some of the vectors' creation depends on the existence of another vector. Now, I'm going to bind them in a dataframe.

```{r bind in tibble}
all_data <- tibble(rand_sample, log_vector, char_vector, fact_vector)
```

Taking the mean will only work for some vectors. This is because the mean function requires numeric inputs or logical inputs. (For logical inputs, the function interprets as binary: i.e., `FALSE` is coded as `0` and `TRUE` is coded as `1`.)

```{r take mean}
mean(rand_sample)
mean(log_vector)
mean(char_vector)
mean(fact_vector)
```


In some cases, you can explicitly convert variables from one type to another. Write a code chunk that applies the  as.numeric function to the logical, character, and factor variables (please show this chunk but not the output). What happens? In a second code chunk, convert your character variable from character to factor to numeric; similarly, convert your factor variable from factor to character to numeric. What happens?


```{r conversion, results="hide"}
fact_to_num <- as.numeric(fact_vector)
char_to_num <- as.numeric(char_vector)
log_to_num <- as.numeric(log_vector)
```

## 


```{r conversion take 2, results="hide"}
char_to_num_2 <- as.numeric(as.factor(char_vector))
fact_to_num_2 <- as.numeric(as.character(fact_vector))
```
